# version: '3.8'

# services:
#   postgres:
#     image: postgres:15
#     environment:
#       POSTGRES_DB: product_explorer
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: password
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U postgres"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   redis:
#     image: redis:7-alpine
#     ports:
#       - "6379:6379"
#     volumes:
#       - redis_data:/data
#     healthcheck:
#       test: ["CMD", "redis-cli", "ping"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   backend:
#     build: ./backend
#     ports:
#       - "3001:3001"
#   environment:
#   DATABASE_URL: "postgresql://postgres:kmr1608@db.mruqynbyalbyoqcbxukq.supabase.co:5432/postgres"
#   REDIS_HOST: "redis"
#   REDIS_PORT: 6379
#   NODE_ENV: development
#   depends_on:
#       postgres:
#         condition: service_healthy
#       redis:
#         condition: service_healthy
#   volumes:
#       - ./backend:/app
#       - /app/node_modules

#   frontend:
#     build: ./frontend
#     ports:
#       - "3000:3000"
#     environment:
#       NEXT_PUBLIC_API_URL: http://localhost:3001
#     depends_on:
#       - backend
#     volumes:
#       - ./frontend:/app
#       - /app/node_modules

# volumes:
#   postgres_data:
#   redis_data:

version: "3.9"

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "3001:3001"
    env_file:
      - ./backend/.env   # <── inject vars from backend/.env
    environment:
      DATABASE_URL: "postgres://postgres.mruqynbyalbyoqcbxukq:V08nQ8Qe2llpBsNF@aws-1-ap-south-1.pooler.supabase.com:5432/postgres"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NODE_ENV: development
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  redis_data: